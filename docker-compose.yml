version: "3.7"
services:
  # App
  app:
    build:
      args:
        user: lion
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: travellist
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - lion

  # DB
  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - lion
  
  # Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - lion
  
  # Elastic
  elasticsearch:
    container_name: elastic
    ports:
      - 9200:9200
    restart: unless-stopped
    image: elasticsearch:1.6
    volumes:
      - ./docker-compose/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml
      - ./docker-compose/elasticsearch/logging.yml:/usr/share/elasticsearch/config/logging.yml
    networks:
      - lion

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - lion

networks:
  lion:
    driver: bridge
